import typing as t

from sessions.schemas import AddToCartDTO


class BaseSessionManagerI(t.Protocol):
    @classmethod
    def get_for_session(cls, session_id: str) -> t.Self: ...


class CartManagerI(BaseSessionManagerI, t.Protocol):
    async def add(self, dto: AddToCartDTO) -> int: ...

    async def delete_by_id(self, product_id: int): ...

    async def update_qty_by_id(self, product_id: int, qty: int): ...

    async def check_exists(self, product_id: int): ...

    async def create(self, dto: AddToCartDTO): ...

    async def list_items(self) -> dict[int, int]: ...


class WishlistManagerI(BaseSessionManagerI, t.Protocol):
    async def append(self, product_id: int): ...

    async def remove(self, product_id: int): ...

    async def check_exists(self, product_id: int): ...

    async def list_ids(self) -> t.Sequence[int]: ...
