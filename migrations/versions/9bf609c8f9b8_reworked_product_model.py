"""reworked product model

Revision ID: 9bf609c8f9b8
Revises: 8ede77519793
Create Date: 2025-03-12 16:00:19.458561

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from products.models import ProductCategory, ProductDeliveryMethod, ProductPlatform

# revision identifiers, used by Alembic.
revision: str = "9bf609c8f9b8"
down_revision: Union[str, None] = "8ede77519793"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

_category_enum = postgresql.ENUM(
    ProductCategory,
    name="productcategory",
)

_platform_enum = postgresql.ENUM(
    ProductPlatform,
    name="productplatform",
)

_delivery_method_enum = postgresql.ENUM(
    ProductDeliveryMethod,
    name="productdeliverymethod",
)

_enums = (_category_enum, _platform_enum, _delivery_method_enum)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    for enum in _enums:
        enum.create(op.get_bind())
    op.alter_column("product", "description", server_default="")
    op.create_table(
        "regional_price",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("base_price", sa.Numeric(), nullable=False),
        sa.Column("region_code", sa.CHAR(length=3), server_default="", nullable=False),
        sa.Column("original_curr", sa.CHAR(length=3), nullable=True),
        sa.ForeignKeyConstraint(["product_id"], ["product.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("product_id", "region_code"),
    )
    op.add_column(
        "product",
        sa.Column(
            "category",
            _category_enum,
            nullable=False,
        ),
    )
    op.add_column(
        "product",
        sa.Column(
            "delivery_method",
            _delivery_method_enum,
            nullable=False,
        ),
    )
    op.add_column(
        "product",
        sa.Column(
            "platform",
            _platform_enum,
            nullable=False,
        ),
    )
    op.add_column("product", sa.Column("with_gp", sa.Boolean(), nullable=True))
    op.add_column("product", sa.Column("deal_until", sa.DateTime(), nullable=True))
    op.drop_constraint(
        "product_name_category_id_platform_id_key", "product", type_="unique"
    )
    op.create_unique_constraint(None, "product", ["name", "category", "platform"])
    op.drop_constraint("product_category_id_fkey", "product", type_="foreignkey")
    op.drop_constraint("product_platform_id_fkey", "product", type_="foreignkey")
    op.drop_constraint("product_delivery_method_id_fkey", "product", type_="foreignkey")
    op.drop_column("product", "delivery_method_id")
    op.drop_column("product", "discount_valid_to")
    op.drop_column("product", "category_id")
    op.drop_column("product", "platform_id")
    op.drop_column("product", "regular_price")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "product",
        sa.Column("regular_price", sa.NUMERIC(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product",
        sa.Column("platform_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product",
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "product",
        sa.Column(
            "discount_valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "product",
        sa.Column(
            "delivery_method_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "product_delivery_method_id_fkey",
        "product",
        "delivery_method",
        ["delivery_method_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "product_platform_id_fkey",
        "product",
        "platform",
        ["platform_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "product_category_id_fkey",
        "product",
        "category",
        ["category_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "product", type_="unique")
    op.create_unique_constraint(
        "product_name_category_id_platform_id_key",
        "product",
        ["name", "category_id", "platform_id"],
    )
    op.drop_column("product", "deal_until")
    op.drop_column("product", "with_gp")
    op.drop_column("product", "platform")
    op.alter_column("product", "description", server_default=False)
    op.drop_column("product", "delivery_method")
    op.drop_column("product", "category")
    op.drop_table("regional_price")
    for enum in _enums:
        enum.drop(op.get_bind())
    # ### end Alembic commands ###
